import hashlib
from collections import defaultdict

class Hash_chaining(object):
    def __init__(self, bucket_size):
        self.bucket_size = bucket_size
        self.bucket = [[] for i in range(bucket_size)]
    
    def hash(self, key):
        return (key >> 11) % self.bucket_size

    def add(self, key):
        pos = self.hash(key)
        if key not in self.bucket[pos]:
            self.bucket[pos].append(key)

    def find(self, key):
        pos = self.hash(key)
        return key in self.bucket[pos]




if __name__ == "__main__":

    bucket_size = int(500000)
    test = Hash_chaining(bucket_size)

    filename = "algo1-programming_prob-2sum.txt"
    #filename = "test.txt"
    file = open(filename, "r") 
    data = file.readlines()
    arr = []
    for line in data:
        arr.append(int(line))
    
    for item in arr:
        test.add(item)

    print("Loaded")

    exist = set()
    for t in range(-10000, 10000+1):
        if t%200 == 0:
            print(t)
        for x in arr:
            if test.find(t-x):
                exist.add(t)
                continue
                    

    print((exist))

    # {2048, 4096, 4097, 6145, 6146, 8194, 8195, 9777, -5683, -8104, -8103, -6055, -6054, -4006, 2141, 2142, 4189, -4005, 93, 92, -1957, -1956, 4190, 6238, 6239, 8287, 8288, -8011, -8010, -5962, -5961, 185, -3913, 4283, -3912, 4284, -1864, -1863, 186, 2234, 2235, 6332, 8380, 8381, 9405, -9967, -9966, -7918, -7917, -5869, -5868, -3820, 4376, -3819, 279, -1771, -1770, 278, 2327, 2328, 4377, 6425, 6426, 8474, 8475, -9874, -9873, -7825, -3727, -1678, -1677, 371, 372, -7824, -5776, -5775, -3726, 2420, 2421, 4469, 4470, 6518, 6519, 8567, 8568, 9032, -9780, -9779, -3634, -1585, -1584, 464, 465, 2513, 2514, -7731, -7730, -5682, -3633, 4562, 4563, 6611, 6612, 8660, 8661, -4379, -9687, -9686, -7638, -7637, -5589, -5588, -3540, -3541, -1492, -1491, 557, 558, 2606, 2607, 4655, 4656, 6704, 6705, 8754, -9594, -9593, -7545, -7544, -5496, -5495, -3447, -3446, -1398, -1397, 650, 651, 2699, 2700, 4748, 4749, 6797, 6798, 8847, 9498, -9501, -9500, -7452, -3354, -7451, 744, 2793, 2792, -5403, -5402, -3353, -1304, 745, -1305, 4841, 4842, 6890, 6891, 8940, -7173, -7172, -9408, -9407, -7359, -7358, -1212, 837, 2886, 838, 2887, -5310, -5309, -3261, -3260, -1211, 4935, 4936, 6983, 6984, 9033, 9125, -9315, -9314, -7266, -7265, -1119, 930, 931, 2980, 2979, -5217, -5216, -3168, -3167, -1118, 5028, 5029, 7077, 7078, 9126, -4286, -9222, -9221, -5124, -5123, -3075, 1023, 1024, 3072, 3073, -3074, -1026, -1025, 5121, 5122, 7170, 7171, 8753, 9219, 9220, -9128, -9127, -7080, -7079, -5031, 3165, 3166, -5030, -2981, -2982, -933, -932, 1116, 1117, 5214, 5215, 7263, 7264, 9313, 9591, -9035, -9034, -6986, -6985, -4938, 3258, 3259, -4937, -2889, -2888, -840, -839, 1209, 1210, 5307, 5308, 7356, 7357, 9406, -8942, -8941, -6893, -6892, -4844, -4843, -2794, -747, -746, -2795, 1302, 1303, 3351, 3352, 5400, 5401, 7449, 7450, 9499, -8849, -8848, -6800, -2702, -653, 1396, 1395, -6799, -4751, -4750, -2701, -652, 3444, 3445, 5493, 5494, 7542, 7543, 9592, -8756, -8755, -6707, -2609, -560, 1489, 1490, -559, 3538, 3539, -6706, -4658, -4657, -2608, 5586, 5587, 7635, 7636, -2144, 8846, -8663, -8662, -6614, -6613, -4565, -4564, -2515, -2516, -467, -466, 1583, 3631, 3632, 1582, 5680, 5681, 7728, 7729, 9778, 9684, 9685, -8570, -8569, -6521, -2423, -2422, -6520, -4472, -4471, -374, -373, 1675, 1676, 3724, 3725, 5773, 5774, 7822, 7823, 9871, 9872, -8477, -8476, -6428, -2330, -2329, -281, -280, 1768, 1769, -6427, -4378, 3817, 3818, 5866, 5867, 7915, 7916, 9964, 9965, 9312, -6148, -6147, -8383, -8382, -2237, -2236, -188, -187, 1861, 1862, 3910, 3911, -6334, -4285, 5959, 5960, 8008, 8009, -4098, -8290, -8289, -6241, -95, -94, 1954, 1955, 4003, 4004, -6240, -4192, -4191, -2143, 6052, 6053, 8101, 8102, 8939, -2049, -1, -8197, -8196, -4099, -2050, 2047}
    # 427